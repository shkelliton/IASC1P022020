declare doctype - xhtml
basic rules - element and attributes must be lowercase
all elements must be closed
attribute values must be in quotes(double or single)
proper nesting is a must
attribute - i.e. font color red

3 types of doctype
strict, transitional, and frameset
transitional is what we use

basic structure

open html

(<html>)
  (<head>)
    header items
    <title> - title is required
    <meta> - how the page is encoded and its language
      - required meta data
        - the language you are using
        - how your page is encoded
      - optional meta data
        - keywords
        - Page description
    <style> - what css files you will be using
    <script> - any scripts you will be using (i.e javascript)
  (</head>)

  (<body>)
    body items
     - content elements
     - structure elements
  (</body>)
(</html)

close html

CSS NOTES
does not have to be separated like this, just style pref
ruleName{
  -modifierCodeOne;
  -modifierCodeTwo;
}
example
h1{font-size:2px;}
-h1 = selector
-font-size = property
-2px = value
font-size: 2px; =  a statement
h1{font-size:2px;} = a rule

Types of CSS classes
any definition contained in {} in your style sheet is a classes
1- modifying existing html elements (start with class to be modified, i.e. body or p)
2 - Custom styled classes that are applied to html elements (starting with .)
3 - Custom styled unique IDs that are applied to unique HTML element(s)(starting with #)
- ID's are supposed to be unique and used once per Page

Styling HTML elements
Modify all existing html elements (start with class to be modified(body or p))
We can modify and HTML structural or content element by just referencing it in our css
blah blah

Calling style definiti
In order to use the custom styles we've generated in CSS we have to call the class or ID from HTML
The attribute class and/or ID are added to our HTML
<p class="myStyle"> Some styled text</p>
<p id="unique"> Some different text</p>
class is used to style items that  appear many times
Id is used to style items that only appear once per page
Class - ".blak"
ID - "#blak"

Class is a barcode, ID is a serial number

selectors
items to style
Do proper nesting, open and close tags appropriately
heirarchy - if one element contains another, it is considered to be a parent of that items
the item that is contained is the child element of the parent
any elements contained in the child element are considered to be descendants of original parent

nested selectors
target styles
- see slides
-element.class selectors
element.class{p.myStyle{etc}}

general sibling selectors
h1~p{color:red;}

any children of h1 will be red
immediate sibling selector
p+p etc

We can have multiple statements for each css rules
if you ever have a duplicate kind of rule the final rule's style will win out

Specificity
Sometimes with lots of css rules you may have a situation where .... see slides
other

The concept that describes the order that CSS rules are executed is Specificity
Basic rules
Order of Specificity
Inline>ID>Class>Element
Whichever is most specific wins out

Math slide - week 4 - points per Specificity

ID = 100
Class = 10
Element = 1

structure

thinking in blocks and percentages
The DIV tag -block level (break before and after)
span is Inline, no newline before or after(no breaks)

<div class="myDiv">Content here</div>
<span class="large">Content here</span>

When to use Div and span

Box Model for CSS

Margin, border, padding, Content
Div built to contain block level content
<div class=box>
  <p>this content</p>
</div>

Margin
Spacing between other things and Border
Can set top, right, bottom, and left
.box{
margin:20px 10% 20px 10%;
}

CSS Borders
Used to wrap a visual division around your Content
Borders can have a color, width, and style. Used in last week lab
border: etc

Padding
Space between margin and content, very similar to margin
padding:


WEEK 5

Filenames - Just don't use spaces even though you can, and no special characters
Filename should describe file

WORKFLOW describes the order of a set of task

Important to have a set workflow to understand how it works

GROUPING

grouping allows you to apply identical variables to multiple classes
eg
h1,h2,p{color:green}
, means or in this sense


nesting
allows you to apply certain variables to certain classes while they are within other classes
.marked p{color:white}
Will only allow <p> to be white while inside the custom class .marked

Setting dimensions
tags can be given specific dimensions using CSS
TO DO SO WE use the height and width css attributes
We can use either pixels or percentage
.bigImage{
  height:100pc;
  width:50%
}

For more flexible height and width declarations you can use the min/maxheight/width attributes
- min-height, max-height, min-width, max-width
eg
.miniHeight{
  min-height:200px;
}

POSITIONING
CSS can be used to structure information
All page positioning should be done with css, tags such as <center> are depreciated

Fixed position:
- a fixed element is fixed relative to the visible browser window, not the total page
- will stay in same spot regardless of scrolling down the page
e.g. nav points, advertisements

Absolute POSITIONING:
- positioned relative to entire webpage
- stays where it is as we scroll
position:absolute;

RELATIVE POSITIONING
- Positions the item relative to where it would have been had you not positioned it not relative to the page(???)
- It will be positioned away from where it should be by default
-Something left:20px would be 20 pixel away from where it should have been, not 20px away from the total page
position:relative;

Overlapping elements

if elements are positioned they can be ordered
that is to say you can set the order that elements will appear if they were to Overlap
to do this the elements will need a z-index (z-index:5)

Location attributes
Using top/bottom/left/right
i.e. top:50px

WEEK 8 - INTRO TO javascript

HTML is skeleton
CSS is skin
JAVASCRIPT is muscle

Javascript is a scripting language
script that runs as opposed to markup
interpreted on runtime, not compiled like java or c++
slower but more flexible

simple or complex
clock to interaction

link in head, similar to CSS

<script type="text/javascript" src="scripts.js"></script>

HTMl elements can be modified to more easily structure javascript element on the page

document.getElementByID("para")
- select the html element id "para"
.innerHTML
- change the elements html content
="monkeys";
- change it to "monkeys"

Javascript, unlike HTML and CSS, will fail completely if a mistake is made instead of trying to interpret what you've written anyway
Javascript will have problems modifying existing HTML elements before they exist
Try putting your external Javascript file declaration last(or at least after the item you are planning on modifying)

MODIFYING HTML 2
Change color
document.getElementByID("para").style.color = "blue";
We can change it's size
document.getElementByID("para").style.fontSize = "1px";
hide it
document.getElementByID("para").style.visibility = "hidden";

Comments - //just like java
/*for multi line
*/

functions like java

function changeText(){
  javascript to execute in here
}
creates a new function called changeText -brackets required
does Something
close the function

modifying content on user input
html buttons
Tell our Button
onclick attribute

variables
what you'd expect

NO INLINE SCRIPTS SAYS PROF
